@component-name = "app-builder-workflow"
definition {

	property custom.properties = "default.layout.template.id=1_column";
	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.component.names = "App Builder,Workflow";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "App Builder Workflow Site Name");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Objects");
	}

	tearDown {
		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		AppBuilderAdmin.teardownAppBuilder();

		Page.tearDownCP();

		JSONGroup.deleteGroupByName(groupName = "App Builder Workflow Site Name");

		User.tearDownCP();

		Workflow.tearDownWorkflowDefinitions();

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "Assign an entry (task) through the App's table view"
	@priority = "5"
	test AssignEntryThroughTableView {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.createBasicWorkflowAppWith1ExtraStep(
			assignee = "Administrator",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			isCreatingViaPlusIcon = "false",
			objectName = "my custom object",
			tableViewName = "My Table View",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");

		AppBuilderAdmin.addEntry();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content");

		AppBuilderWorkflow.submit();
		Refresh();

		AppBuilderWorkflow.verifyAssignToOption(itemName = "Content");

		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "Test Test",
			itemName = "Content");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Test Test");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Administrator");
	}

	@description = "LRQA-60817 - Automate LPS-111007: As an App User, I want to assign an App entry (task) to an assignee using the App's Table View"
	@priority = "4"
	test AssignEntryToAnotherUser {
		JSONUser.addUser(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1");

		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea2@liferay.com",
			userScreenName = "usersn2");

		JSONRole.assignRoleToUser(
			roleTitle = "Portal Content Reviewer",
			userEmailAddress = "userea1@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea1@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Portal Content Reviewer",
			userEmailAddress = "userea2@liferay.com");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea2@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Objects");

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.createBasicWorkflowAppWith1ExtraStep(
			assignee = "Portal Content Reviewer",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			isCreatingViaPlusIcon = "false",
			objectName = "my custom object",
			tableViewName = "My Table View",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content");

		AppBuilderWorkflow.submit();
		Refresh();
		AppBuilderAppAdmin.waitForItemPresentOnTable(itemName = "Portal Content Reviewer");
		AppBuilderWorkflow.assertAssignToOptionNotPresent(itemName = "Content");
		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");

		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "userfn1 userln1",
			itemName = "Content");

		Refresh();
		AppBuilderAppAdmin.waitForItemPresentOnTable(itemName = "userfn1 userln1");
		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "userfn2 userln2",
			itemName = "Content");

		AppBuilderAppAdmin.waitForItemPresentOnTable(itemName = "userfn2 userln2");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "userfn2 userln2");
	}

	@description = "LRQA-63248 Automate LPS-112672: As an App Admin, I want to create a new Form View for an existing Object in the Workflow App creation UX"
	@priority = "4"
	test CancelCreationOfFormViewAndSelectSecondFormView {
		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.clickOnSelectObject();
		AppBuilderWorkflow.selectObject(objectName = "my custom object");
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
		AppBuilderWorkflow.clickToCreateFormView(positionNumber = "1");
		AppBuilderAdmin.cancel();
		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "Select a Form View",
			positionNumber = "1");

		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.addNewFormView();
		AppBuilderWorkflow.addNewFormView();
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "2");
		AppBuilderWorkflow.clickToCreateFormView(positionNumber = "2");
		AppBuilderWorkflow.createSimpleFormView(
			fieldType = "Text",
			formViewName = "My Form View");

		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "My Form View",
			positionNumber = "2");
	}

	@description = "Create a Basic Workflow App"
	@priority = "5"
	test CreateBasicWorkflowApp {
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.createBasicWorkflowApp(
			deployOption = "Product Menu",
			formViewName = "My Form View",
			isCreatingViaPlusIcon = "false",
			objectName = "my custom object",
			tableViewName = "My Table View",
			workflowAppName = "My Workflow App 1");

		AppBuilderAppAdmin.createBasicWorkflowApp(
			deployOption = "Product Menu",
			formViewName = "My Form View",
			isCreatingViaPlusIcon = "true",
			objectName = "my custom object",
			tableViewName = "My Table View",
			workflowAppName = "My Workflow App 2");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "My Workflow App 1");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "My Workflow App 2");

		AppBuilderAppAdmin.goToStandardTab();
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "My Workflow App 1");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "My Workflow App 2");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.validateWorkflowAppColumns();

		AppBuilderAdmin.undeployApp(itemName = "My Workflow App 2");

		AppBuilderAdmin.deleteApp(itemName = "My Workflow App 2");

		AppBuilderAdmin.undeployApp(itemName = "My Workflow App 1");
		AppBuilderAdmin.deployApp(itemName = "My Workflow App 1");
	}

	@description = "Create a Basic Workflow App with different deployment options"
	@priority = "4"
	test CreateBasicWorkflowAppWithDifferentDeployments {
		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 1",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View 1",
			tableViewName = "My Table View 1");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View 2",
			tableViewName = "My Table View 2");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Objects");

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 2",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View From Object 2",
			tableViewName = "My Table View From Object 2");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		AppBuilderWorkflow.clickBackButton();
		AppBuilderAppAdmin.validateCreateNewAppButtonPresent();

		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		Button.click(button = "Cancel");
		AppBuilderAppAdmin.validateCreateNewAppButtonPresent();

		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.clickOnSelectObject();
		AppBuilderAppAdmin.searchItem(itemName = "my custom object 1");
		AppBuilderAppAdmin.validateObjectResultPresent(objectName = "my custom object 1");
		AppBuilderAppAdmin.validateObjectResultNotPresent(objectName = "my custom object 2");

		AppBuilderWorkflow.selectObject(objectName = "my custom object 1");
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
		AppBuilderAppAdmin.searchItem(itemName = "My Form View 1");
		AppBuilderWorkflow.validateFormOrTableViewResultPresent(itemName = "My Form View 1");
		AppBuilderWorkflow.validateFormOrTableViewResultNotPresent(itemName = "My Form View 2");
		AppBuilderWorkflow.validateFormOrTableViewResultNotPresent(itemName = "My Form View From Object 2");

		AppBuilderWorkflow.selectFormView(formViewName = "My Form View 1");
		AppBuilderWorkflow.clickOnSelectTableView();
		AppBuilderAppAdmin.searchItem(itemName = "My Table View 1");
		AppBuilderWorkflow.validateFormOrTableViewResultPresent(itemName = "My Table View 1");
		AppBuilderWorkflow.validateFormOrTableViewResultNotPresent(itemName = "My Table View 2");
		AppBuilderWorkflow.validateFormOrTableViewResultNotPresent(itemName = "My Table View From Object 2");

		AppBuilderWorkflow.selectTableView(tableViewName = "My Table View 1");
		AppBuilderWorkflow.clickOnSelectObject();
		AppBuilderWorkflow.selectObject(objectName = "my custom object 2");
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
		AppBuilderWorkflow.validateFormOrTableViewResultPresent(itemName = "My Form View From Object 2");
		AppBuilderWorkflow.validateFormOrTableViewResultNotPresent(itemName = "My Form View 1");
		AppBuilderWorkflow.validateFormOrTableViewResultNotPresent(itemName = "My Form View 2");

		AppBuilderWorkflow.selectFormView(formViewName = "My Form View From Object 2");
		AppBuilderWorkflow.clickOnSelectTableView();
		AppBuilderWorkflow.validateFormOrTableViewResultPresent(itemName = "My Table View From Object 2");
		AppBuilderWorkflow.validateFormOrTableViewResultNotPresent(itemName = "My Table View 1");
		AppBuilderWorkflow.validateFormOrTableViewResultNotPresent(itemName = "My Table View 2");
		AppBuilderWorkflow.selectTableView(tableViewName = "My Table View From Object 2");

		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Deploy");
		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Save");
		Button.click(button = "Cancel");
		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		AppBuilderWorkflow.addWorkflowAppName(workflowAppName = "Widget Workflow App");
		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Deploy");
		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Save");
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.clickOnSelectObject();
		AppBuilderWorkflow.selectObject(objectName = "my custom object 1");
		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Deploy");
		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Save");
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
		AppBuilderWorkflow.selectFormView(formViewName = "My Form View 1");
		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Deploy");
		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Save");
		AppBuilderWorkflow.clickOnSelectTableView();
		AppBuilderWorkflow.selectTableView(tableViewName = "My Table View 1");
		Button.click(button = "Deploy");
		AppBuilderWorkflow.assertButtonDisabled(buttonName = "Done");

		App.toggleDeploy(deployOption = "Widget");
		Button.click(button = "Done");
		AppBuilderWorkflow.waitForButtonNotPresent(buttonName = "Done");

		AppBuilderAppAdmin.createBasicWorkflowApp(
			deployOption = "Standalone",
			formViewName = "My Form View 1",
			isCreatingViaPlusIcon = "true",
			objectName = "my custom object 1",
			tableViewName = "My Table View 1",
			workflowAppName = "Standalone Workflow App");

		AppBuilderAppAdmin.createBasicWorkflowApp(
			deployOption = "Product Menu",
			formViewName = "My Form View 1",
			isCreatingViaPlusIcon = "true",
			objectName = "my custom object 1",
			tableViewName = "My Table View 1",
			workflowAppName = "Product Menu Workflow App");

		JSONLayout.addPublicLayout(
			groupName = "App Builder Workflow Site Name",
			layoutName = "App Builder Workflow Test Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "App Builder Workflow Site Name",
			layoutName = "App Builder Workflow Test Page",
			layoutTemplate = "1 Column");

		Navigator.gotoSitePage(
			pageName = "App Builder Workflow Test Page",
			siteName = "App Builder Workflow Site Name");

		Portlet.addPG(
			pageName = "App Builder Workflow Test Page",
			portletName = "Widget Workflow App");

		Button.viewPresent(button = "New Entry");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Product Menu Workflow App");
		Button.viewPresent(button = "New Entry");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAdmin.openStandAloneApp(itemName = "Standalone Workflow App");
		SelectWindow.selectPopUp(locator1 = "null");
		Button.viewPresent(button = "New Entry");
		Navigator.closeWindow();
	}

	@description = "LRQA-63247 - Automate LPS-112672: As an App Admin, I want to create a new Form View for an existing Object in the Workflow App creation UX"
	@priority = "5"
	test CreateFormViewThroughWorkflowAppBuilder {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.clickOnSelectObject();
		AppBuilderWorkflow.selectObject(objectName = "my custom object");
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
		AppBuilderWorkflow.assertCreateFormViewButton(positionNumber = "1");
		AppBuilderWorkflow.clickToCreateFormView(positionNumber = "1");
		AppBuilderWorkflow.createSimpleFormView(
			fieldType = "Text",
			formViewName = "My Form View");

		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "My Form View",
			positionNumber = "1");
	}

	@description = "LRQA-60385 - Automate LPS-110981: As an App Admin, I want to deploy an App with multiple workflow steps and one same Form View"
	@priority = "5"
	test CreateNewStepSecondaryActionAndAssignee {
		property portal.acceptance = "true";

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.assertStepPresent(step = "1");

		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectActionsCard();
		AppBuilderWorkflow.clickOnAddNewActionButton();
		AppBuilderWorkflow.validateActionPresent(action = "Secondary Action");

		AppBuilderWorkflow.clickStepConfigurationBackButton();
		AppBuilderWorkflow.selectStepAssignee(
			assignee = "Administrator",
			step = "2");
		AppBuilderWorkflow.assertAssigneeInfoPresentOnStep(
			assignee = "Administrator",
			step = "2");
	}

	@description = "LRQA-63174 - Automate LPS-111511: As an App Admin, I want to create a new Object and Form during the Workflow App creation experience"
	@priority = "5"
	test CreateObjectAndForm {
		property portal.acceptance = "true";

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();

		AppBuilderAppAdmin.clickOnCreateNewAppButton();

		AppBuilderWorkflow.selectDataAndViewsCard();

		AppBuilderWorkflow.clickOnSelectObject();

		AppBuilderWorkflow.validatePlusButton();

		AppBuilderWorkflow.addNewObject(objectName = "my custom object");

		FormViewBuilder.setUpTwoFieldSets(
			fieldSetName = "Field Sets",
			fieldType1 = "Text",
			fieldType2 = "Numeric");

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Field Sets");

		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Multiple Selection");
		for (var number : list "1,2,3") {
			FormViewBuilder.editOptionsRow(
				optionName = "Option${number}",
				optionValue = "Option ${number}",
				rowNumber = "${number}");
		}

		FormViewBuilder.closeSidebar();

		FormViewBuilder.addFieldByDoubleClick(fieldType = "Upload");

		FormViewBuilder.closeSidebar();

		FormViewBuilder.clickFieldLabel(fieldLabel = "Multiple Selection");

		FormViewBuilder.gotoRules();

		FormViewBuilder.addRule();

		FormViewBuilder.editRuleName(ruleName = "Multiple Selection Rule");

		FormRules.configureConditionOptions(
			conditionField = "Multiple Selection",
			conditionOperator = "Is not empty",
			conditionRowNumber = "1");

		FormRules.configureActionOptions(
			action = "Show",
			actionRowNumber = "1",
			actionTarget = "Upload");

		FormViewBuilder.ruleSave();

		FormViewBuilder.setName(formViewName = "My Form View");

		FormViewBuilder.save();

		AppBuilderWorkflow.assertObjectSelected(objectName = "my custom object");
		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "My Form View",
			positionNumber = "1");
	}

	@description = "Create an App through the 'Apps' portlet"
	@priority = "5"
	test CreateStandardApp {
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.validateTabsPresent();

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Objects");

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 1",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Objects");

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 2",
			isCreatingFormView = "false",
			isCreatingViaPlusIcon = "true");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.searchItem(itemName = "Not Existent Object");
		AppBuilderAppAdmin.validateNoObjectResultMessage();

		AppBuilderAppAdmin.searchItem(itemName = "my custom object 1");
		AppBuilderAppAdmin.validateObjectResultPresent(objectName = "my custom object 1");
		AppBuilderAppAdmin.validateObjectResultNotPresent(objectName = "my custom object 2");

		AppBuilderAppAdmin.selectObject(objectName = "my custom object 1");
		Button.click(button = "Cancel");
		AppBuilderAppAdmin.validateCreateNewAppButtonPresent();

		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.searchItem(itemName = "my custom object 1");
		AppBuilderAppAdmin.selectObject(objectName = "my custom object 1");
		AppBuilderStandardApp.clickBackButton();
		AppBuilderAppAdmin.validateCreateNewAppButtonPresent();

		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.searchItem(itemName = "my custom object 1");
		AppBuilderAppAdmin.selectObject(objectName = "my custom object 1");

		AppBuilderStandardApp.add(
			appTitle = "Standard App 1",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.searchItem(itemName = "my custom object 1");
		AppBuilderAppAdmin.selectObject(objectName = "my custom object 1");

		AppBuilderStandardApp.add(
			appTitle = "Standard App 2",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Standard App 1");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Standard App 2");

		Refresh();

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App 1");

		AppBuilderAdmin.addEntry();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content Test 1");

		AppBuilderAdmin.save();

		AppBuilderAdmin.addEntry();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content Test 2");

		AppBuilderAdmin.save();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Content Test 1");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Content Test 2");
	}

	@description = "LRQA-63304 - Automate LPS-112673: As an App Admin, I want to create a new Table View for an existing Object in the Workflow App creation UX"
	@priority = "5"
	test CreateTableViewThroughWorkflowAppBuilder {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.clickOnSelectObject();
		AppBuilderWorkflow.selectObject(objectName = "my custom object");
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
		AppBuilderWorkflow.selectFormView(formViewName = "My Form View");
		AppBuilderWorkflow.clickOnSelectTableView();
		AppBuilderWorkflow.assertCreateTableViewButton();
		AppBuilderWorkflow.clickToCreateTableView();

		AppBuilderWorkflow.createSimpleTableView(
			fieldType = "Text",
			tableViewName = "My Table View");

		AppBuilderWorkflow.assertTableViewSelected(tableViewName = "My Table View");
	}

	@description = "LRQA-60710 - Automate LPS-112665: As an App Admin, I want to define more than one Form View for one same step (concatenation of Forms)"
	@priority = "4"
	test DefineFormViewExceptions {
		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderWorkflow.selectStartStepDataAndViews(
			formViewName = "My Form View",
			objectName = "my custom object",
			tableViewName = "My Table View");

		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.addNewFormView();
		AppBuilderWorkflow.assertRemoveFormViewButton(positionNumber = "1");
		AppBuilderWorkflow.assertRemoveFormViewButton(positionNumber = "2");

		AppBuilderWorkflow.removeFormView(positionNumber = "2");
		AppBuilderWorkflow.assertRemoveFormViewButtonNotPresent();

		AppBuilderWorkflow.addNewFormView();
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "2");
		AppBuilderWorkflow.assertFormViewPresentOnListDisabled(formViewName = "My Form View");
	}

	@description = "Delete a step while creating a Workflow App"
	@priority = "5"
	test DeleteStep {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnCreateNewAppButton();

		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.assertStepPresent(step = "1");
		AppBuilderWorkflow.deleteStep(step = "1");
		AppBuilderWorkflow.assertStepNotPresent(step = "1");
	}

	@description = "LRQA-60707 - Automate LPS-110982: As an App Admin, I want to delete a step of my App's workflow"
	@priority = "4"
	test DeleteStepWhileRunning {
		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.createBasicWorkflowAppWith1ExtraStep(
			assignee = "Administrator",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			isCreatingViaPlusIcon = "false",
			objectName = "my custom object",
			tableViewName = "My Table View",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content 1");

		AppBuilderWorkflow.submit();
		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.deleteStep(step = "1");
		AppBuilderWorkflow.saveNewVersionedApp();
		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.assertStepNotPresent(step = "1");

		Button.click(button = "Cancel");
		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content 2");
		AppBuilderWorkflow.submit();
		Refresh();
		AppBuilderWorkflow.assertEntryInfoOnTableView(
			entryName = "Content 2",
			info = "Completed");
	}

	@description = "LRQA-63476 - Automate LPS-111683: As an App Admin, I want to view and edit existing Form and Table Views during my App creation experience"
	@priority = "5"
	test EditFormAndTableView {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();

		AppBuilderAppAdmin.clickOnCreateNewAppButton();

		AppBuilderWorkflow.selectStartStepDataAndViews(
			formViewName = "My Form View",
			objectName = "my custom object",
			tableViewName = "My Table View");

		AppBuilderWorkflow.openFormView(positionNumber = "1");

		FormViewBuilder.setName(formViewName = "Form Edit");

		FormViewBuilder.save();

		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "Form Edit",
			positionNumber = "1");

		AppBuilderWorkflow.openTableView();

		TableViewBuilder.setName(tableViewName = "Table Edit");

		TableViewBuilder.save();

		AppBuilderWorkflow.assertTableViewSelected(
			positionNumber = "1",
			tableViewName = "Table Edit");

		AppBuilderWorkflow.openFormView(positionNumber = "1");

		FormViewBuilder.setName(formViewName = "Form Edit Again");

		AppBuilderAdmin.cancel();

		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "Form Edit",
			positionNumber = "1");

		AppBuilderWorkflow.openTableView();

		TableViewBuilder.setName(tableViewName = "Table Edit Again");

		AppBuilderAdmin.cancel();

		AppBuilderWorkflow.assertTableViewSelected(
			positionNumber = "1",
			tableViewName = "Table Edit");
	}

	@description = "Filter and order the apps created using App Builder"
	@priority = "5"
	test FilterAndOrderStandardApps {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		App.add(
			appTitle = "First App",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		App.add(
			appTitle = "Second App",
			deployOption = "Standalone",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		App.add(
			appTitle = "Third App",
			deployOption = "Widget",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		App.add(
			appTitle = "Fourth App",
			deployOption = "Product",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAdmin.validateFilterAndOrder();

		AppBuilderAdmin.chooseAppSearchFilterByOption(filterOption = "Name");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Third App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Second App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "3",
			title = "Fourth App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "4",
			title = "First App");

		AppBuilderAdmin.chooseAppSearchFilterByOption(filterOption = "Created Date");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Fourth App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Third App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "3",
			title = "Second App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "4",
			title = "First App");

		AppBuilderAdmin.chooseAppSearchFilterByOption(filterOption = "Modified Date");

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "Fourth App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Third App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "3",
			title = "Second App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "4",
			title = "First App");

		AppBuilderAdmin.filterListAscendAndDescend();

		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "1",
			title = "First App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "2",
			title = "Second App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "3",
			title = "Third App");
		AppBuilderAdmin.validateListTitleAtRow(
			rowNumber = "4",
			title = "Fourth App");

		AppBuilderAdmin.chooseMultipleFilter(
			deploymentFilterOption = "Product Menu",
			statusFilterOption = "Deployed");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "First App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Second App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Third App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Fourth App");

		AppBuilderAdmin.clearFilter();

		AppBuilderAdmin.filterByDeploymentType(itemName = "Standalone");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Second App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "First App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Third App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Fourth App");

		AppBuilderAdmin.clearSearch();

		AppBuilderAdmin.filterByDeploymentType(itemName = "Widget");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Third App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "First App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Second App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Fourth App");

		AppBuilderAdmin.clearSearch();

		AppBuilderAdmin.filterByDeploymentType(itemName = "Product Menu");

		AppBuilderAdmin.searchByItem(itemName = "Fourth App");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Fourth App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "First App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Second App");

		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Third App");

		AppBuilderAdmin.clearSearch();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "First App");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Second App");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Third App");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Fourth App");
	}

	@description = "LRQA-63083 - Automate LPS-105493: As an App Adm, I want create the workflow process of my App during the App deployment"
	@priority = "5"
	test GoToWorkflowPageThroughStandardAppSetup {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.selectObject(objectName = "my custom object");
		App.selectFormView(formViewName = "My Form View");
		App.selectTableView(tableViewName = "My Table View");
		AppBuilderStandardApp.clickOnManageWorkflows();
		SelectWindow.selectPopUp(locator1 = "null");
		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Process Builder");

		Navigator.closeWindow();
	}

	@description = "LRQA-63477 - Automate LPS-111683: As an App Admin, I want to view and edit existing Form and Table Views during my App creation experience"
	@priority = "4"
	test OpenFormViewOnNewStep {
		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.clickOnSelectObject();
		AppBuilderWorkflow.selectObject(objectName = "my custom object");
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
		AppBuilderWorkflow.selectFormView(formViewName = "My Form View");
		AppBuilderWorkflow.clickOnSelectTableView();
		AppBuilderWorkflow.selectTableView(tableViewName = "My Table View");

		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "My Form View",
			positionNumber = "1");
		AppBuilderWorkflow.openFormView(positionNumber = "1");
		FormViewBuilder.validateFieldLabel(fieldLabel = "Text");
		AppBuilderAdmin.cancel();

		AppBuilderWorkflow.addNewFormView();
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "2");
		AppBuilderWorkflow.clickToCreateFormView(positionNumber = "2");
		AppBuilderWorkflow.createSimpleFormView(
			fieldType = "Numeric",
			formViewName = "My Form View 2");
		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "My Form View 2",
			positionNumber = "2");
		AppBuilderWorkflow.openFormView(positionNumber = "2");
		FormViewBuilder.validateFieldLabel(fieldLabel = "Numeric");
	}

	@description = "LRQA-63084 - Automate LPS-105493: As an App Adm, I want create the workflow process of my App during the App deployment"
	@priority = "4"
	test RefreshWorkflowTable {
		property test.name.skip.portal.instance = "AppBuilderWorkflow#RefreshWorkflowTable";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.selectObject(objectName = "my custom object");
		App.selectFormView(formViewName = "My Form View");
		App.selectTableView(tableViewName = "My Table View");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Single Approver");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "New Workflow");
		AppBuilderStandardApp.clickOnManageWorkflows();
		SelectWindow.selectPopUp(locator1 = "null");
		Workflow.addNewDefinition(workflowDefinitionTitle = "New Workflow");
		PortletEntry.publish();
		Navigator.closeWindow();
		App.refreshWorkflowList();
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Single Approver");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "New Workflow");
	}

	@description = "LRQA-63035 - Automate LPS-105491: As an App Adm, I want my App's submissions to be able to trigger a Workflow process"
	@priority = "5"
	test StandardAppWithWorkflow {
		property portal.acceptance = "true";
		property test.name.skip.portal.instance = "AppBuilderWorkflow#StandardAppWithWorkflow";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.addNewDefinition(workflowDefinitionTitle = "New Workflow");
		Workflow.saveDefinition();
		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.selectObject(objectName = "my custom object");
		App.selectFormView(formViewName = "My Form View");
		App.selectTableView(tableViewName = "My Table View");
		AppBuilderAdmin.setName(title = "Standard App With Workflow");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Single Approver");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "New Workflow");
		App.selectWorkflow(workflowName = "Single Approver");
		App.toggleDeploy(deployOption = "Product Menu");
		Button.click(button = "Deploy");

		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.selectObject(objectName = "my custom object");
		AppBuilderStandardApp.add(
			appTitle = "Standard App Without Workflow",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App With Workflow");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content With Workflow");

		AppBuilderAdmin.save();
		Refresh();
		AppBuilderAppAdmin.assertColumnPresent(columnName = "Status");
		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App Without Workflow");
		AppBuilderAppAdmin.assertColumnPresent(columnName = "Status");
		AppBuilderAdmin.viewItem(itemName = "Content With Workflow");
		DetailsView.editEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Edited Content With Workflow");

		AppBuilderAdmin.save();
		Refresh();
		DetailsView.backToTableView();
		AppBuilderWorkflow.assertEntryInfoOnTableView(
			entryName = "Edited Content With Workflow",
			info = "Pending");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App With Workflow");
		AppBuilderAdmin.viewItem(itemName = "Edited Content With Workflow");
		DetailsView.editEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Edited Again Content With Workflow");

		AppBuilderAdmin.save();
		Refresh();
		DetailsView.backToTableView();
		AppBuilderWorkflow.assertEntryInfoOnTableView(
			entryName = "Edited Again Content With Workflow",
			info = "Pending");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Standard App With Workflow",
			workflowAssetType = "App Builder Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Standard App With Workflow",
			workflowAssetType = "App Builder Entry",
			workflowTask = "Review");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App With Workflow");
		AppBuilderWorkflow.assertEntryInfoOnTableView(
			entryName = "Edited Again Content With Workflow",
			info = "Approved");
	}

	@description = "LRQA-63036 - Automate LPS-105491: As an App Adm, I want my App's submissions to be able to trigger a Workflow process"
	@priority = "4"
	test StandardAppWithWorkflowAlternativeScenarios {
		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.selectObject(objectName = "my custom object");
		App.selectFormView(formViewName = "My Form View");
		App.selectTableView(tableViewName = "My Table View");
		App.assertWorkflowSelected(workflowName = "No Workflow");
		App.assertWorkflowColumnPresent(workflowColumnName = "Name");
		App.assertWorkflowColumnPresent(workflowColumnName = "Created Date");
		App.assertWorkflowColumnPresent(workflowColumnName = "Modified Date");
		Button.clickNext();
		AppBuilderAdmin.setName(title = "Standard App Without Workflow");
		App.toggleDeploy(deployOption = "Product Menu");
		Button.click(button = "Deploy");
		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App Without Workflow");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content Without Workflow");

		AppBuilderAdmin.save();
		Refresh();
		AppBuilderWorkflow.assertEntryInfoOnTableView(
			entryName = "Content Without Workflow",
			info = "Approved");

		AppBuilderAdmin.deleteEntry(itemName = "Content Without Workflow");
		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderAppAdmin.clickOnSelectObject();
		AppBuilderAppAdmin.selectObject(objectName = "my custom object");
		App.selectFormView(formViewName = "My Form View");
		App.selectTableView(tableViewName = "My Table View");
		App.selectWorkflow(workflowName = "Single Approver");
		AppBuilderAdmin.setName(title = "Standard App With Workflow");
		App.toggleDeploy(deployOption = "Product Menu");
		Button.click(button = "Deploy");
		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App With Workflow");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content With Workflow");

		AppBuilderAdmin.save();
		Refresh();
		Navigator.openURL();
		UserBar.gotoDropdownItem(dropdownItem = "My Submissions");
		Workflow.withdrawTaskByActions(
			workflowAssetTitle = "Standard App With Workflow",
			workflowAssetType = "App Builder Entry",
			workflowDefinition = "Single Approver",
			workflowTask = "Review");

		Navigator.openURL();
		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App With Workflow");
		AppBuilderWorkflow.assertEntryInfoOnTableView(
			entryName = "Content With Workflow",
			info = "Draft");

		AppBuilderAdmin.viewItem(itemName = "Content With Workflow");
		DetailsView.editEntry();
		AppBuilderAdmin.save();
		AppBuilderAdmin.gotoBack();
		AppBuilderWorkflow.assertEntryInfoOnTableView(
			entryName = "Content With Workflow",
			info = "Pending");

		AppBuilderAdmin.viewItem(itemName = "Content With Workflow");
		DetailsView.assertStatus(status = "Pending");
		DetailsView.assertStep(step = "Review");

		Navigator.gotoNotifications();
		WorkflowAsset.gotoViaNotification(
			assetType = "App Builder Entry",
			user = "Test Test");

		AssertTextEquals(
			locator1 = "MyWorkflowTasksTask#ASSIGNED_TO",
			value1 = "Nobody");

		AssertTextEquals(
			locator1 = "MyWorkflowTasksTask#STATE",
			value1 = "Review");

		AssertTextEquals.assertPartialText(
			locator1 = "MyWorkflowTasksTask#PREVIEW_TITLE",
			value1 = "Standard App With Workflow");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");
		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Standard App With Workflow",
			workflowAssetType = "App Builder Entry",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Standard App With Workflow",
			workflowAssetType = "App Builder Entry",
			workflowTask = "Review");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "Standard App With Workflow");
		AppBuilderWorkflow.assertEntryInfoOnTableView(
			entryName = "Content With Workflow",
			info = "Approved");
	}

	@description = "Validete Form View in 'Read-Only' and 'Editable' mode'"
	@priority = "4"
	test ValidateFormViewModes {
		property portal.acceptance = "true";

		var formViewName = "My Form View";
		var tableViewName = "My Table View";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "${formViewName}",
			tableViewName = "${tableViewName}");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();

		AppBuilderAppAdmin.clickOnCreateNewAppButton();

		AppBuilderWorkflow.selectStartStepDataAndViews(
			formViewName = "${formViewName}",
			objectName = "my custom object",
			tableViewName = "${tableViewName}");

		AppBuilderWorkflow.addNewStep();

		AppBuilderWorkflow.selectStepAssignee(
			assignee = "Administrator",
			step = "1");

		AppBuilderWorkflow.selectStepSingleFormView(
			formViewMode = "Editable",
			formViewName = "${formViewName}",
			step = "1");

		AppBuilderWorkflow.addNewStep();

		AppBuilderWorkflow.selectStepAssignee(
			assignee = "Administrator",
			step = "2");

		AppBuilderWorkflow.addWorkflowAppName(workflowAppName = "My Workflow App");
		Button.click(button = "Deploy");
		App.toggleDeploy(deployOption = "Product Menu");
		Button.click(button = "Done");
		AppBuilderWorkflow.waitForButtonNotPresent(buttonName = "Done");
		Refresh();

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");

		AppBuilderAdmin.addEntry();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content");

		AppBuilderWorkflow.submit();

		Refresh();

		AppBuilderAdmin.validateItemNameOnTable(itemName = "Content");

		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "Test Test",
			itemName = "Content");

		AppBuilderAdmin.editItem(itemName = "Content");

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Edited Content");

		AppBuilderWorkflow.submit();
		Refresh();
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Edited Content");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Content");

		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "Test Test",
			itemName = "Edited Content");

		AppBuilderAdmin.editItem(itemName = "Edited Content");

		AppBuilderWorkflow.assertFieldDisabled(fieldName = "Text");
	}

	@description = "LRQA-60711 - Automate LPS-112434: As an App Admin, I want to deploy an App having different Form Views of the same Data Object for each Step"
	@priority = "4"
	test ValidateFormViewsOnSteps {
		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 1",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View 1");

		FormViewBuilder.addFormView(
			fieldType = "Numeric",
			formViewName = "My Form View 2");

		TableViewBuilder.addBasicTableView(
			fieldType = "Text",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Objects");

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object 2",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Date",
			formViewName = "Other Object Form View",
			tableViewName = "Other Object Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnCreateNewAppButton();
		AppBuilderWorkflow.selectStartStepDataAndViews(
			formViewName = "My Form View 1",
			objectName = "my custom object 1",
			tableViewName = "My Table View");

		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectStepAssignee(
			assignee = "Administrator",
			step = "1");

		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "My Form View 1",
			positionNumber = "1");

		AppBuilderWorkflow.addNewFormView();
		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "2");
		AppBuilderWorkflow.assertFormViewPresentOnList(formViewName = "My Form View 1");
		AppBuilderWorkflow.assertFormViewPresentOnList(formViewName = "My Form View 2");
		AppBuilderWorkflow.assertFormViewNotPresentOnList(formViewName = "Other Object Form View");
		AppBuilderWorkflow.selectFormView(formViewName = "My Form View 2");
		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectStepAssignee(
			assignee = "Administrator",
			step = "2");

		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "My Form View 1",
			positionNumber = "1");

		AppBuilderWorkflow.assertFormViewSelected(
			formViewName = "My Form View 2",
			positionNumber = "2");

		AppBuilderWorkflow.addWorkflowAppName(workflowAppName = "My Workflow App");
		Button.click(button = "Deploy");
		App.toggleDeploy(deployOption = "Product Menu");
		Button.click(button = "Done");
		AppBuilderWorkflow.waitForButtonNotPresent(buttonName = "Done");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content");

		AppBuilderWorkflow.submit();
		Refresh();
		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "Test Test",
			itemName = "Content");

		AppBuilderAdmin.editItem(itemName = "Content");
		FormViewBuilder.assertTextPresent(
			fieldName = "Text",
			fieldValue = "Content");

		FormViewBuilder.editText(
			fieldName = "Numeric",
			fieldValue = "1987");

		AppBuilderWorkflow.submit();
		Refresh();
		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "Test Test",
			itemName = "Content");

		AppBuilderAdmin.editItem(itemName = "Content");
		FormViewBuilder.assertTextPresent(
			fieldName = "Text",
			fieldValue = "Content");

		FormViewBuilder.assertTextPresent(
			fieldName = "Numeric",
			fieldValue = "1987");
	}

	@description = "Automate LPS-111262 & LPS-111681"
	@priority = "5"
	test ValidateListOfStandardApps {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "My Custom Object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View");

		TableViewBuilder.addBasicTableView(
			fieldType = "Text",
			tableViewName = "My Table View");

		App.add(
			appTitle = "My App",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Objects");
		AppBuilderAdmin.openItem(itemName = "My Custom Object");
		AppBuilderAdmin.switchTab(tabName = "Apps");
		App.add(
			appTitle = "Standalone App",
			deployOption = "Standalone",
			formViewName = "My Form View",
			tableViewName = "My Table View");
		App.add(
			appTitle = "Widget App",
			deployOption = "Widget",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAdmin.validateItemNameOnTable(itemName = "My App");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Standalone App");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Widget App");

		AppBuilderAppAdmin.validateStandardAppColumns();

		AppBuilderAdmin.undeployApp(itemName = "My App");

		AppBuilderAdmin.deployApp(itemName = "My App");

		AppBuilderAdmin.searchByItem(itemName = "Ap");
		AppBuilderAppAdmin.validateSearchItemCount(
			itemCount = "3",
			itemName = "Ap");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "My App");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Standalone App");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Widget App");

		AppBuilderAdmin.searchByItem(itemName = "Widget");
		AppBuilderAppAdmin.validateSearchItemCount(
			itemCount = "1",
			itemName = "Widget");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "My App");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Standalone App");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Widget App");

		AppBuilderAdmin.searchByItem(itemName = "No Result Validation");
		AppBuilderAdmin.validateIfSearchItemIsNotFound(itemName = "No Result Validation");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "My App");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Standalone App");
		AppBuilderAdmin.validateItemNameOnTableNotPresent(itemName = "Widget App");

		AppBuilderAdmin.clearSearch();
		AppBuilderAdmin.validateItemNameOnTable(itemName = "My App");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Standalone App");
		AppBuilderAdmin.validateItemNameOnTable(itemName = "Widget App");

		AppBuilderAdmin.openStandAloneApp(itemName = "Standalone App");
		SelectWindow.selectPopUp(locator1 = "null");
		AppBuilderAdmin.validateStandAloneApp();
		Navigator.closeWindow();

		AppBuilderAdmin.deleteApp(itemName = "My App");
	}

	@description = "LRQA-60598 - Automate LPS-111001: As an App Admin, I want to Liferay to handle multiple running versions of my App every time I make an update on a existing App"
	@priority = "5"
	test ValidateMultipleRunningVersions {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View 1",
			tableViewName = "My Table View");

		FormViewBuilder.addFormView(
			fieldType = "Text",
			formViewName = "My Form View 2");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.createBasicWorkflowApp(
			deployOption = "Product Menu",
			formViewName = "My Form View 1",
			isCreatingViaPlusIcon = "false",
			objectName = "my custom object",
			tableViewName = "My Table View",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content 1");

		AppBuilderWorkflow.submit();

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectStepAssignee(
			assignee = "Administrator",
			step = "1");

		AppBuilderWorkflow.saveNewVersionedApp();
		AppBuilderAppAdmin.assertWorkflowAppVersion(
			versionNumber = "2.0",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.selectStepSingleFormView(
			formViewMode = "Editable",
			formViewName = "My Form View 2",
			step = "1");

		AppBuilderWorkflow.saveNewVersionedApp();
		AppBuilderAppAdmin.assertWorkflowAppVersion(
			versionNumber = "3.0",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.deleteStep(step = "1");
		AppBuilderWorkflow.saveNewVersionedApp();
		AppBuilderAppAdmin.assertWorkflowAppVersion(
			versionNumber = "4.0",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");
		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content 2");

		AppBuilderWorkflow.submit();
		AppBuilderAdmin.openItem(itemName = "Content 1");
		AppBuilderWorkflow.assertEntryAppVersion(versionNumber = "1.0");
		DetailsView.nextEntry();
		AppBuilderWorkflow.assertEntryAppVersion(versionNumber = "4.0");
	}

	@description = "LRQA-60705 - Automate LPS-111001: As an App Admin, I want to Liferay to handle multiple running versions of my App every time I make an update on a existing App"
	@priority = "4"
	test ValidateNotAffectedAppVersionsActions {
		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View 1",
			tableViewName = "My Table View 1");

		FormViewBuilder.addFormView(
			fieldType = "Numeric",
			formViewName = "My Form View 2");

		TableViewBuilder.addBasicTableView(
			fieldType = "Numeric",
			tableViewName = "My Table View 2");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.createBasicWorkflowAppWith1ExtraStep(
			assignee = "Administrator",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			isCreatingViaPlusIcon = "false",
			objectName = "my custom object",
			tableViewName = "My Table View",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.changeDeploymentType(
			deploymentOptionsToTurnOff = "Product Menu",
			deploymentOptionsToTurnOn = "Standalone");

		AppBuilderWorkflow.saveApp();
		AppBuilderAppAdmin.assertWorkflowAppDeploymentType(
			deploymentType = "Standalone",
			workflowAppName = "My Workflow App");
		AppBuilderAppAdmin.assertWorkflowAppVersion(
			versionNumber = "1.0",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.changeTableView(tableViewName = "My Table View 2");
		AppBuilderWorkflow.saveApp();
		AppBuilderAppAdmin.assertWorkflowAppVersion(
			versionNumber = "1.0",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.addWorkflowAppName(workflowAppName = "My Workflow App Edited");
		AppBuilderWorkflow.saveApp();
		AppBuilderAppAdmin.assertWorkflowAppName(workflowAppName = "My Workflow App Edited");
		AppBuilderAppAdmin.assertWorkflowAppVersion(
			versionNumber = "1.0",
			workflowAppName = "My Workflow App");

		AppBuilderAdmin.openItem(itemName = "My Workflow App");
		AppBuilderWorkflow.deleteStep(step = "1");
		AppBuilderWorkflow.assertStepNotPresent(step = "1");
		AppBuilderWorkflow.saveApp();
		AppBuilderWorkflow.assertAppUpdateAlertModal();
	}

	@description = "Validate steps while running an App"
	@priority = "4"
	test ValidateStepsWhileRunningApp {
		var formViewName = "My Form View";
		var tableViewName = "My Table View";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "${formViewName}",
			tableViewName = "${tableViewName}");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAppAdmin.clickOnPlusButton();
		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectStep(step = "Start");
		AppBuilderWorkflow.selectActionsCard();
		AppBuilderWorkflow.assertButtonNotPresent(button = "Add New Action");
		AppBuilderWorkflow.selectStep(step = "1");
		AppBuilderWorkflow.selectActionsCard();
		AppBuilderWorkflow.assertButtonNotPresent(button = "Add New Action");
		AppBuilderWorkflow.selectStep(step = "End");
		AppBuilderWorkflow.assertButtonNotPresent(button = "Actions");

		AppBuilderWorkflow.selectStep(step = "1");
		AppBuilderWorkflow.addNewStep();
		AppBuilderWorkflow.selectStartStepDataAndViews(
			formViewName = "${formViewName}",
			objectName = "my custom object",
			tableViewName = "${tableViewName}");
		AppBuilderWorkflow.addWorkflowAppName(workflowAppName = "My Workflow App");

		AppBuilderWorkflow.selectStepAssignee(
			assignee = "Administrator",
			step = "1");

		AppBuilderWorkflow.selectStepAssignee(
			assignee = "Administrator",
			step = "2");

		AppBuilderWorkflow.selectActionsCard();
		AppBuilderWorkflow.clickOnAddNewActionButton();
		AppBuilderWorkflow.validateActionPresent(action = "Secondary Action");
		Button.click(button = "Remove");
		AppBuilderWorkflow.validateActionNotPresent(action = "Secondary Action");

		AppBuilderWorkflow.clickOnAddNewActionButton();

		AppBuilderWorkflow.defineActionName(
			action = "Primary Action",
			actionName = "Go Next");

		AppBuilderWorkflow.defineActionName(
			action = "Secondary Action",
			actionName = "Go Back");

		AppBuilderWorkflow.clickStepConfigurationBackButton();

		AppBuilderWorkflow.validateActionsNamesInsideActionsCards(
			primaryActionName = "Go Next",
			secondaryActionName = "Go Back");

		Button.click(button = "Deploy");
		App.toggleDeploy(deployOption = "Product Menu");
		Button.click(button = "Done");
		AppBuilderWorkflow.waitForButtonNotPresent(buttonName = "Done");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App");

		AppBuilderAdmin.addEntry();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content");

		AppBuilderWorkflow.submit();
		Refresh();

		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "Test Test",
			itemName = "Content");

		AppBuilderAdmin.editItem(itemName = "Content");
		AppBuilderWorkflow.submit();
		Refresh();

		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "Test Test",
			itemName = "Content");

		AppBuilderAdmin.editItem(itemName = "Content");
		AppBuilderWorkflow.waitForButtonPresent(buttonName = "Go Next");
		AppBuilderWorkflow.assertButtonPresent(buttonName = "Go Next");
		AppBuilderWorkflow.assertButtonPresent(buttonName = "Go Back");
	}

	@description = "LRQA-61050 - Automate smoke tests from LPS-111006"
	@priority = "5"
	test ViewWorkflowAppThroughNotifications {
		property portal.acceptance = "true";

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		for (var delpoyOption : list "Widget,Standalone,Product Menu") {
			AppBuilderAppAdmin.createBasicWorkflowAppWith1ExtraStep(
				assignee = "Administrator",
				deployOption = "${delpoyOption}",
				formViewName = "My Form View",
				isCreatingViaPlusIcon = "true",
				objectName = "my custom object",
				tableViewName = "My Table View",
				workflowAppName = "My Workflow App ${delpoyOption}");
		}

		JSONLayout.addPublicLayout(
			groupName = "App Builder Workflow Site Name",
			layoutName = "App Builder Workflow Test Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "App Builder Workflow Site Name",
			layoutName = "App Builder Workflow Test Page",
			layoutTemplate = "1 Column");

		Navigator.gotoSitePage(
			pageName = "App Builder Workflow Test Page",
			siteName = "App Builder Workflow Site Name");

		Portlet.addPG(
			pageName = "App Builder Workflow Test Page",
			portletName = "My Workflow App Widget");

		AppBuilderAdmin.addEntry();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content From Widget");

		AppBuilderWorkflow.submit();
		Navigator.gotoNotifications();

		AppBuilderWorkflow.gotoViaNotification(
			assetType = "My Workflow App Widget",
			user = "Test Test");

		FormViewBuilder.validatePredefinedText(
			fieldName = "Text",
			fieldValue = "Content From Widget");

		AppBuilderAdmin.gotoCustomAppApplicationsMenuApplications(portlet = "My Workflow App Product Menu");
		AppBuilderAdmin.addEntry();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content From Product Menu");

		AppBuilderWorkflow.submit();
		Navigator.gotoNotifications();

		AppBuilderWorkflow.gotoViaNotification(
			assetType = "My Workflow App Product Menu",
			user = "Test Test");

		FormViewBuilder.validatePredefinedText(
			fieldName = "Text",
			fieldValue = "Content From Product Menu");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.goToWorkflowPoweredTab();
		AppBuilderAdmin.openStandAloneApp(itemName = "My Workflow App Standalone");
		SelectWindow.selectPopUp(locator1 = "null");
		AppBuilderAdmin.addEntry();

		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content From Standalone");

		AppBuilderWorkflow.submit();
		Navigator.closeWindow();
		Navigator.gotoNotifications();

		AppBuilderWorkflow.gotoViaNotification(
			assetType = "My Workflow App Standalone",
			user = "Test Test");

		FormViewBuilder.validatePredefinedText(
			fieldName = "Text",
			fieldValue = "Content From Standalone");
	}

	@description = "LRQA-61051 - Automate LPS-111006: As an App User, I want to my Workflowed App's notifications to redirect me to the App's entry (task) View instead of the "My Workflow Tasks""
	@priority = "4"
	test ViewWorkflowAppThroughNotifications_SiteMenuAndOtherUser {
		JSONLayout.addPublicLayout(
			groupName = "App Builder Workflow Site Name",
			layoutName = "App Builder Workflow Test Page");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		JSONRole.assignRoleToUser(
			roleTitle = "Administrator",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Objects");

		AppBuilderAdmin.addCustomObject(
			customObjectName = "my custom object",
			isCreatingFormView = "true",
			isCreatingViaPlusIcon = "true");

		AppBuilderAdmin.createFormViewAndTableView(
			fieldType = "Text",
			formViewName = "My Form View",
			tableViewName = "My Table View");

		ApplicationsMenu.gotoPortlet(
			category = "App Builder",
			panel = "Applications",
			portlet = "Apps");

		AppBuilderAppAdmin.createBasicWorkflowAppWith1ExtraStep(
			assignee = "Administrator",
			deployOption = "Product Menu",
			formViewName = "My Form View",
			isCreatingViaPlusIcon = "false",
			menuOption = "Site Menu",
			objectName = "my custom object",
			siteOptionList = "App Builder Workflow Site Name",
			tableViewName = "My Table View",
			workflowAppName = "My Workflow App");

		Navigator.gotoSitePage(
			pageName = "App Builder Workflow Test Page",
			siteName = "App Builder Workflow Site Name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "My Workflow App");

		AppBuilderAdmin.addEntry();
		FormViewBuilder.editText(
			fieldName = "Text",
			fieldValue = "Content");

		AppBuilderWorkflow.submit();
		Refresh();
		AppBuilderWorkflow.assignEntryThroughTableView(
			assignee = "userfn userln",
			itemName = "Content");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoNotifications();

		AppBuilderWorkflow.gotoViaNotification(
			assetType = "My Workflow App",
			user = "Test Test");

		FormViewBuilder.validatePredefinedText(
			fieldName = "Text",
			fieldValue = "Content");
	}

}