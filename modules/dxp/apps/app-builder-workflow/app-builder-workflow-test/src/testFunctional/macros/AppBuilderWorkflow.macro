definition {

	macro addNewFormView {
		Click(locator1 = "AppBuilderWorkflow#ADD_NEW_FORM_VIEW_BUTTON");
	}

	macro addNewObject {
		AppBuilderWorkflow.clickOnAddNewCustomObjectButton();

		Type(
			locator1 = "AppBuilderWorkflow#NEW_OBJECT_NAME_FIELD",
			value1 = "${objectName}");

		Click(locator1 = "AppBuilderWorkflow#BUTTON_CONTINUE");

		SelectFrame(
			key_title = "New Form View",
			locator1 = "IFrame#MODAL_ANY");
	}

	macro addNewStep {
		Click(locator1 = "AppBuilderWorkflow#NEW_STEP_BUTTON");
	}

	macro addWorkflowAppName {
		Type(
			locator1 = "AppBuilderWorkflow#WORKFLOW_APP_NAME_FIELD",
			value1 = "${workflowAppName}");
	}

	macro assertAppUpdateAlertModal {
		AssertElementPresent(locator1 = "AppBuilderWorkflow#APP_ALERT_MODAL_TITLE");
		AssertElementPresent(locator1 = "AppBuilderWorkflow#APP_ALERT_MODAL_TEXT");
	}

	macro assertAssigneeInfoPresentOnStep {
		AssertElementPresent(
			key_assignee = "${assignee}",
			key_step = "${step}",
			locator1 = "AppBuilderWorkflow#STEP_CARD_ASSIGNEE_INFO");
	}

	macro assertAssignToOptionNotPresent {
		Refresh();
		Click(
			key_itemName = "${itemName}",
			locator1 = "AppBuilder#VERTICAL_ELLIPSIS_BUTTON");

		AssertElementNotPresent(
			key_menuItem = "Assign to",
			locator1 = "MenuItem#ANY_MENU_ITEM");
	}

	macro assertButtonDisabled {
		AssertVisible(
			key_text = "${buttonName}",
			locator1 = "Button#ANY_DISABLED");
	}

	macro assertButtonNotPresent {
		Button.viewNotPresent(button = "${buttonName}");
	}

	macro assertButtonPresent {
		Button.viewPresent(button = "${buttonName}");
	}

	macro assertCreateFormViewButton {
		AssertElementPresent(
			key_positionNumber = "${positionNumber}",
			locator1 = "AppBuilderWorkflow#CREATE_FORM_VIEW_BUTTON");
	}

	macro assertCreateTableViewButton {
		AssertElementPresent(locator1 = "AppBuilderWorkflow#CREATE_TABLE_VIEW_BUTTON");
	}

	macro assertEntryAppVersion {
		var key_versionNumber = "${versionNumber}";

		if (IsElementNotPresent(locator1 = "AppBuilderWorkflow#ENTRY_APP_VERSION")) {
			DetailsView.nextEntry();

			if (IsElementNotPresent(locator1 = "AppBuilderWorkflow#ENTRY_APP_VERSION")) {
				DetailsView.previousEntry();
			}

			AssertElementPresent(locator1 = "AppBuilderWorkflow#ENTRY_APP_VERSION");
		}
		else {
			AssertElementPresent(locator1 = "AppBuilderWorkflow#ENTRY_APP_VERSION");
		}
	}

	macro assertEntryInfoOnTableView {
		var key_entryName = "${entryName}";
		var key_info = "${info}";
		AssertElementPresent(locator1 = "AppBuilderWorkflow#ENTRY_INFO_ON_TABLE_VIEW");
	}

	macro assertFieldDisabled {
		AssertVisible(
			key_fieldName = "${fieldName}",
			locator1 = "AppBuilderWorkflow#TEXT_FIELD_DISABLED");
	}

	macro assertFormViewNotPresentOnList {
		AssertElementNotPresent(
			key_itemName = "${formViewName}",
			locator1 = "AppBuilderWorkflow#FORM_OR_TABLE_VIEW_ITEM");
	}

	macro assertFormViewPresentOnList {
		AssertElementPresent(
			key_itemName = "${formViewName}",
			locator1 = "AppBuilderWorkflow#FORM_OR_TABLE_VIEW_ITEM");
	}

	macro assertFormViewPresentOnListDisabled {
		AssertElementPresent(
			key_itemName = "${formViewName}",
			locator1 = "AppBuilderWorkflow#FORM_OR_TABLE_VIEW_ITEM_DISABLED");
	}

	macro assertFormViewSelected {
		AssertTextEquals(
			key_positionNumber = "${positionNumber}",
			locator1 = "AppBuilderWorkflow#SELECT_FORM_VIEW_BUTTON_TEXT",
			value1 = "${formViewName}");
	}

	macro assertObjectSelected {
		AssertTextEquals(
			locator1 = "AppBuilderWorkflow#SELECT_CUSTOM_OBJECT_BUTTON_TEXT",
			value1 = "${objectName}");
	}

	macro assertRemoveFormViewButton {
		AssertElementPresent(
			key_positionNumber = "${positionNumber}",
			locator1 = "AppBuilderWorkflow#REMOVE_FORM_VIEW_BUTTON_SPECIFIC");
	}

	macro assertRemoveFormViewButtonNotPresent {
		AssertElementNotPresent(locator1 = "AppBuilderWorkflow#REMOVE_FORM_VIEW_BUTTON_GENERAL");
	}

	macro assertStepNotPresent {
		AssertElementNotPresent(
			key_step = "${step}",
			locator1 = "AppBuilderWorkflow#STEP_CARD");
	}

	macro assertStepPresent {
		AssertElementPresent(
			key_step = "${step}",
			locator1 = "AppBuilderWorkflow#STEP_CARD");
	}

	macro assertTableViewSelected {
		AssertTextEquals(
			locator1 = "AppBuilderWorkflow#SELECT_TABLE_VIEW_BUTTON_TEXT",
			value1 = "${tableViewName}");
	}

	macro assignEntryThroughTableView {
		Click(
			key_itemName = "${itemName}",
			locator1 = "AppBuilder#VERTICAL_ELLIPSIS_BUTTON");

		while (IsElementNotPresent(key_menuItem = "Assign to", locator1 = "MenuItem#ANY_MENU_ITEM")) {
			Refresh();
			Pause(locator1 = "3000");
			Click(
				key_itemName = "${itemName}",
				locator1 = "AppBuilder#VERTICAL_ELLIPSIS_BUTTON");
		}

		MenuItem.clickNoError(menuItem = "Assign to");

		Click(locator1 = "AppBuilderWorkflow#SELECT_NEW_ASSIGNEE_BUTTON");

		Type(
			locator1 = "AppBuilderWorkflow#SELECT_NEW_ASSIGNEE_SEARCH_FIELD",
			value1 = "${assignee}");

		Click(
			key_assignee = "${assignee}",
			locator1 = "AppBuilderWorkflow#SELECT_NEW_ASSIGNEE");

		Button.click(button = "Done");

		AppBuilderAppAdmin.waitForItemPresentOnTable(itemName = "${assignee}");
	}

	macro changeDeploymentType {
		Click.javaScriptClick(locator1 = "AppBuilderWorkflow#DEPLOY_SETTINGS_BUTTON");

		for (var deploymentOption : list "${deploymentOptionsToTurnOn}") {
			App.toggleDeploy(deployOption = "${deploymentOption}");
		}

		for (var deploymentOption : list "${deploymentOptionsToTurnOff}") {
			App.toggleDeploy(deployOption = "${deploymentOption}");
		}

		Button.click(button = "Done");
		AppBuilderWorkflow.waitForButtonNotPresent(buttonName = "Done");
	}

	macro changeTableView {
		AppBuilderWorkflow.selectStep(step = "Start");
		AppBuilderWorkflow.selectDataAndViewsCard();
		AppBuilderWorkflow.clickOnSelectTableView();
		AppBuilderWorkflow.selectTableView(tableViewName = "${tableViewName}");
	}

	macro clickBackButton {
		Click(locator1 = "AppBuilderWorkflow#BACK_BUTTON");
	}

	macro clickOnAddNewActionButton {
		Button.click(button = "Add New Action");
	}

	macro clickOnAddNewCustomObjectButton {
		Click(locator1 = "AppBuilderWorkflow#CREATE_NEW_CUSTOM_OBJECT_BUTTON");
	}

	macro clickOnSelectFormView {
		Click(
			key_positionNumber = "${positionNumber}",
			locator1 = "AppBuilderWorkflow#SELECT_FORM_VIEW_BUTTON");
	}

	macro clickOnSelectObject {
		Click(locator1 = "AppBuilderWorkflow#SELECT_OBJECT_BUTTON");
	}

	macro clickOnSelectTableView {
		Click(locator1 = "AppBuilderWorkflow#SELECT_TABLE_VIEW_BUTTON");
	}

	macro clickSaveButton {
		Button.click(button = "Save");
	}

	macro clickSaveButtonFromSaveAppModal {
		Click(
			key_buttonName = "Save",
			locator1 = "AppBuilderWorkflow#SAVE_APP_MODAL_BUTTON");
	}

	macro clickStepConfigurationBackButton {
		Click(locator1 = "AppBuilderWorkflow#STEP_CONFIGURATION_BACK_BUTTON");
	}

	macro clickToCreateFormView {
		Click.javaScriptClick(
			key_positionNumber = "${positionNumber}",
			locator1 = "AppBuilderWorkflow#CREATE_FORM_VIEW_BUTTON");

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "New Form View",
			locator1 = "IFrame#MODAL_ANY");
	}

	macro clickToCreateTableView {
		Click.javaScriptClick(locator1 = "AppBuilderWorkflow#CREATE_TABLE_VIEW_BUTTON");

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "New Table View",
			locator1 = "IFrame#MODAL_ANY");
	}

	macro createSimpleFormView {
		FormViewBuilder.addFieldByDoubleClick(fieldType = "${fieldType}");
		FormViewBuilder.setName(formViewName = "${formViewName}");
		FormViewBuilder.save();
	}

	macro createSimpleTableView {
		TableViewBuilder.addColumnByDoubleClick(fieldType = "${fieldType}");
		TableViewBuilder.setName(tableViewName = "${tableViewName}");
		TableViewBuilder.save();
	}

	macro defineActionName {
		Type(
			key_action = "${action}",
			locator1 = "AppBuilderWorkflow#ACTION_ITEM_NAME_INPUT",
			value1 = "${actionName}");
	}

	macro deleteStep {
		Click(
			key_step = "${step}",
			locator1 = "AppBuilderWorkflow#STEP_CARD_KEBAB_MENU");

		MenuItem.clickNoError(menuItem = "Delete Step");
	}

	macro gotoViaNotification {
		Notifications.gotoNotifications();

		if (isSet(user)) {
			AssertClick(
				locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
				value1 = "${user} sent you a ${assetType} entry in the workflow.");
		}
		else {
			AssertClick(
				locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
				value1 = "sent you a ${assetType} entry in the workflow.");
		}
	}

	macro openFormView {
		Click.javaScriptClick(
			key_positionNumber = "${positionNumber}",
			locator1 = "AppBuilderWorkflow#OPEN_FORM_VIEW");

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Edit Form View",
			locator1 = "IFrame#MODAL_ANY");
	}

	macro openTableView {
		Click.javaScriptClick(locator1 = "AppBuilderWorkflow#OPEN_TABLE_VIEW");

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Edit Table View",
			locator1 = "IFrame#MODAL_ANY");
	}

	macro removeFormView {
		Click.javaScriptClick(
			key_positionNumber = "${positionNumber}",
			locator1 = "AppBuilderWorkflow#REMOVE_FORM_VIEW_BUTTON_SPECIFIC");
	}

	macro saveApp {
		AppBuilderWorkflow.clickSaveButton();
		AppBuilderWorkflow.waitForButtonNotPresent(buttonName = "Save");
	}

	macro saveNewVersionedApp {
		AppBuilderWorkflow.clickSaveButton();
		AppBuilderWorkflow.clickSaveButtonFromSaveAppModal();
		AppBuilderWorkflow.waitForButtonNotPresent(buttonName = "Save");
	}

	macro selectActionsCard {
		Click(locator1 = "AppBuilderWorkflow#ACTIONS_CARD");
	}

	macro selectDataAndViewsCard {
		Click(locator1 = "AppBuilderWorkflow#DATA_AND_VIEWS_CARD");
	}

	macro selectFormView {
		Click(
			key_itemName = "${formViewName}",
			locator1 = "AppBuilderWorkflow#FORM_OR_TABLE_VIEW_ITEM");
	}

	macro selectObject {
		Click(
			key_objectName = "${objectName}",
			locator1 = "AppBuilderWorkflow#OBJECT_ITEM");
	}

	macro selectStartStepDataAndViews {
		AppBuilderWorkflow.selectStep(step = "Start");

		AppBuilderWorkflow.selectDataAndViewsCard();

		AppBuilderWorkflow.clickOnSelectObject();
		AppBuilderWorkflow.selectObject(objectName = "${objectName}");

		AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
		AppBuilderWorkflow.selectFormView(formViewName = "${formViewName}");

		AppBuilderWorkflow.clickOnSelectTableView();
		AppBuilderWorkflow.selectTableView(tableViewName = "${tableViewName}");
	}

	macro selectStep {
		Click(
			key_step = "${step}",
			locator1 = "AppBuilderWorkflow#STEP_CARD");
	}

	macro selectStepAssignee {
		AppBuilderWorkflow.selectStep(step = "${step}");

		Click(locator1 = "AppBuilderWorkflow#SELECT_ASSIGNEE_FIELD");

		Click(
			key_assignee = "${assignee}",
			locator1 = "AppBuilderWorkflow#ASSIGNEE_ITEM");
	}

	macro selectStepSingleFormView {
		AppBuilderWorkflow.selectStep(step = "${step}");

		AppBuilderWorkflow.selectDataAndViewsCard();

		key_positionNumber = "1";
		if (!(IsTextEqual.isPartialText(locator1 = "AppBuilderWorkflow#SELECT_FORM_VIEW_BUTTON_TEXT", value1 = "${formViewName}"))) {
			AppBuilderWorkflow.clickOnSelectFormView(positionNumber = "1");
			AppBuilderWorkflow.selectFormView(formViewName = "${formViewName}");
		}

		Click.clickNoMouseOverNoWaitForVisible(
			key_formViewMode = "${formViewMode}",
			locator1 = "AppBuilderWorkflow#FORM_VIEW_MODE");
	}

	macro selectTableView {
		Click(
			key_itemName = "${tableViewName}",
			locator1 = "AppBuilderWorkflow#FORM_OR_TABLE_VIEW_ITEM");
	}

	macro submit {
		while (IsElementNotPresent(key_text = "Submit", locator1 = "Button#ANY")) {
			Pause(locator1 = "3000");
		}
		Button.click(button = "Submit");

		AppBuilderWorkflow.waitForButtonNotPresent(buttonName = "Submit");
	}

	macro validateActionNotPresent {
		AssertElementNotPresent(
			key_action = "${action}",
			locator1 = "AppBuilderWorkflow#ACTION_ITEM");
	}

	macro validateActionPresent {
		AssertElementPresent(
			key_action = "${action}",
			locator1 = "AppBuilderWorkflow#ACTION_ITEM");
	}

	macro validateActionsNamesInsideActionsCards {
		AssertElementPresent(
			key_action = "Primary Action",
			key_actionName = "${primaryActionName}",
			locator1 = "AppBuilderWorkflow#ACTION_NAME_INSIDE_ACTIONS_CARD");

		if (isSet(secondaryActionName)) {
			AssertElementPresent(
				key_action = "Secondary Action",
				key_actionName = "${secondaryActionName}",
				locator1 = "AppBuilderWorkflow#ACTION_NAME_INSIDE_ACTIONS_CARD");
		}
	}

	macro validateFormOrTableViewResultNotPresent {
		AssertElementNotPresent(
			key_itemName = "${itemName}",
			locator1 = "AppBuilderWorkflow#FORM_OR_TABLE_VIEW_ITEM");
	}

	macro validateFormOrTableViewResultPresent {
		AssertElementPresent(
			key_itemName = "${itemName}",
			locator1 = "AppBuilderWorkflow#FORM_OR_TABLE_VIEW_ITEM");
	}

	macro validatePlusButton {
		AssertElementPresent(locator1 = "AppBuilderWorkflow#CREATE_NEW_CUSTOM_OBJECT_BUTTON");
	}

	macro verifyAssignToOption {
		Click(
			key_itemName = "${itemName}",
			locator1 = "AppBuilder#VERTICAL_ELLIPSIS_BUTTON");

		while (IsElementNotPresent(key_menuItem = "Assign to", locator1 = "MenuItem#ANY_MENU_ITEM")) {
			Refresh();
			Pause(locator1 = "3000");
			Click(
				key_itemName = "${itemName}",
				locator1 = "AppBuilder#VERTICAL_ELLIPSIS_BUTTON");
		}

		AssertTextEquals(
			key_menuItem = "Assign to",
			locator1 = "MenuItem#ANY_MENU_ITEM",
			value1 = "Assign to");
	}

	macro waitForButtonNotPresent {
		while (IsElementPresent(key_text = "${buttonName}", locator1 = "Button#ANY")) {
			Pause(locator1 = "1000");
		}
	}

	macro waitForButtonPresent {
		while (IsElementNotPresent(key_text = "${buttonName}", locator1 = "Button#ANY")) {
			Pause(locator1 = "1000");
		}
	}

}