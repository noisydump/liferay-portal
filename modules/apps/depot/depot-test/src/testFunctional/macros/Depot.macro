definition {

	macro addDepot {
		LexiconEntry.gotoAdd();

		Type(
			locator1 = "TextInput#NAME",
			value1 = "${depotName}");

		Button.clickSave();

		if ("${depot}" == "Duplicate") {
			AssertTextEquals(
				locator1 = "Message#ERROR_FORM_FIELD_REQUIRED",
				value1 = "Please enter a unique name.");
		}
		else {
			Alert.viewSuccessMessageText(successMessage = "Asset Library was added.");

			AssertTextEquals(
				locator1 = "ControlMenu#HEADING",
				value1 = "${depotName}");

			if (isSet(depotDescription)) {
				Type(
					locator1 = "TextArea#DESCRIPTION",
					value1 = "${depotDescription}");
			}

			Button.clickSave();

			Alert.viewSuccessMessage();
		}
	}

	macro changeLanguagesOrder {
		var key_fromRowNumber = "${fromRowNumber}";
		var key_toRowNumber = "${toRowNumber}";

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "LanguageConfiguration#DEPOT_LANGUAGE_ORDER_FROM",
			locator2 = "LanguageConfiguration#DEPOT_LANGUAGE_ORDER_TO",
			value1 = "");
	}

	macro configureApplication {
		if ("${status}" == "Enabled") {
			for (var applicationList : list "${applicationList}") {
				Check(
					checkboxName = "${applicationList}",
					locator1 = "Checkbox#ANY_CHECKBOX");
			}
		}
		else if ("${status}" == "Disabled") {
			for (var applicationList : list "${applicationList}") {
				Uncheck(
					checkboxName = "${applicationList}",
					locator1 = "Checkbox#ANY_CHECKBOX");
			}
		}

		PortletEntry.save();
	}

	macro configureAutoTagging {
		if ("${autoTagging}" == "Enabled") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Enable Auto Tagging of Assets on This Asset Library",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else if ("${autoTagging}" == "Disabled") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Enable Auto Tagging of Assets on This Asset Library",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		PortletEntry.save();
	}

	macro configureCurrentLanguages {
		for (var language : list "English (United States),Arabic (Saudi Arabia),Catalan (Spain),Chinese (China),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Spanish (Spain),Swedish (Sweden)") {
			if ("${language}" != "${defaultDepotLanguage}") {
				if (IsElementPresent(locator1 = "Checkbox#DEPOT_LANGUAGE_CHECKBOX_CHECKED", key_language = "${language}")) {
					Click.clickNoMouseOverNoWaitForVisible(
						key_language = "${language}",
						locator1 = "Checkbox#DEPOT_LANGUAGE_CHECKBOX");
				}
			}
		}

		for (var currentLanguage : list "${currentLanguages}" ) {
			if ("${currentLanguage}" != "${defaultDepotLanguage}") {
				Click.clickNoMouseOverNoWaitForVisible(
					key_language = "${currentLanguage}",
					locator1 = "Checkbox#DEPOT_LANGUAGE_CHECKBOX");
			}
		}

		Button.click(button = "Done");
	}

	macro configureDefaultLanguage {
		Click(
			key_language = "${defaultDepotLanguage}",
			locator1 = "Icon#DEPOT_LANGUAGES_ELLIPSIS");

		Click.clickNoMouseOverNoWaitForVisible(
			key_language = "${locale}",
			locator1 = "Button#MAKE_DEFAULT");

		Button.click(button = "Save");

		AssertTextEquals.assertPartialText(
			key_language = "${defaultDepotLanguage}",
			locator1 = "LanguageConfiguration#DEPOT_DEFAULT_LANGUAGE",
			value1 = "${defaultDepotLanguage}");
	}

	macro configureDirectoryIndexing {
		if ("${directoryIndexing}" == "Enabled") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Enable Directory Indexing",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else if ("${directoryIndexing}" == "Disabled") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Enable Directory Indexing",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		PortletEntry.save();
	}

	macro configureRecycleBin {
		Panel.expandPanel(panel = "Recycle Bin");

		if ("${recycleBin}" == "Enabled") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Enable Recycle Bin",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else if ("${recycleBin}" == "Disabled") {
			Uncheck.uncheckToggleSwitchNoErrorNoAssert(locator1 = "Checkbox#ENABLE_RECYCLE_BIN");

			AssertConfirm(value1 = "Disabling the Recycle Bin prevents the restoring of content that has been moved to the Recycle Bin.");

			AssertNotChecked.assertNotCheckedNotVisible(locator1 = "Checkbox#ENABLE_RECYCLE_BIN");
		}

		PortletEntry.save();
	}

	macro configureSearch {
		for (var siteName : list "${siteList}") {
			DepotNavigator.gotoEdit(depotName = "${depotName}");

			DepotNavigator.gotoSites(depotName = "${depotName}");

			LexiconTable.clickEllipsisItem(
				item = "${item}",
				tableEntry = "${siteName}");

			SelectFrame(value1 = "relative=top");

			Alert.viewSuccessMessage();

			AssertTextEquals(
				key_tableEntry = "${siteName}",
				key_tableEntryText = "${tableEntryText}",
				locator1 = "LexiconTable#TABLE_ENTRY_TEXT",
				value1 = "${tableEntryText}");
		}
	}

	macro configureSharing {
		if ("${sharing}" == "Enabled") {
			Check.checkToggleSwitch(
				key_toggleSwitchLabel = "Enable Sharing",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}
		else if ("${sharing}" == "Disabled") {
			Uncheck.uncheckToggleSwitch(
				key_toggleSwitchLabel = "Enable Sharing",
				locator1 = "ToggleSwitch#ANY_TOGGLE_SWITCH");
		}

		PortletEntry.save();
	}

	macro connectSite {
		for (var siteName : list "${siteList}") {
			Button.clickAdd();

			SelectFrame(locator1 = "IFrame#SELECT_SITES");

			Pause(locator1 = "3000");

			Navigator.gotoNavItem(navItem = "My Sites");

			SiteSelector.selectSite(site = "${siteName}");

			SelectFrame(value1 = "relative=top");

			Alert.viewSuccessMessage();

			AssertElementPresent.pauseAssertVisible(
				key_tableEntry = "${siteName}",
				locator1 = "LexiconTable#TABLE_ENTRY");
		}
	}

	macro deleteContentViaBulkEditing {
		if (isSet(recycleBinDisabled)) {
			ClickNoError(locator1 = "Icon#DELETE");

			AssertConfirm(value1 = "Are you sure you want to delete the selected entries? They will be deleted immediately.");

			Alert.viewSuccessMessage();
		}
		else {
			ClickNoError(locator1 = "Icon#TRASH");

			if (isSet(webContent)) {
				AssertConfirm(value1 = "Are you sure you want to move the selected entries to the Recycle Bin?");
			}

			Alert.viewSuccessMessage();
		}
	}

	macro deleteCP {
		if (isSet(deletions)) {
			ClickNoError(locator1 = "Icon#DELETE");
		}

		else {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = "Delete",
				rowEntry = "${depotName}");
		}

		AssertConfirm(value1 = "Removing an asset library can affect sites that use the contents stored in it. Are you sure you want to continue removing this asset library?");

		Alert.viewSuccessMessage();
	}

	macro disconnectSite {
		for (var siteName : list "${siteList}") {
			LexiconTable.clickEllipsisItem(
				item = "Disconnect",
				tableEntry = "${siteName}");

			AssertConfirm(value1 = "Removing this site connection will not allow the site to consume data from this asset library directly.");

			Alert.viewSuccessMessage();
		}
	}

	macro editDepot {
		if (isSet(listView)) {
			LexiconEntry.changeDisplayStyle(displayStyle = "list");

			Click(
				key_listEntry = "${depotName}",
				locator1 = "LexiconList#LIST_ENTRY_ELLIPSIS");

			MenuItem.click(menuItem = "Edit");
		}

		else if (isSet(tableView)) {
			LexiconEntry.changeDisplayStyle(displayStyle = "table");

			Click(
				key_tableEntry = "${depotName}",
				locator1 = "LexiconTable#TABLE_ENTRY_ELLIPSIS");

			MenuItem.click(menuItem = "Edit");
		}

		else if (isSet(settings)) {
			AssertElementNotPresent(locator1 = "Button#BACK");
		}

		else {
			DepotNavigator.gotoEdit(depotName = "${depotName}");
		}

		if (isSet(depotNameEdit)) {
			if (isSet(language)) {
				PortletEntry.changeLocale(
					fieldName = "Name",
					locale = "${language}");

				Type(
					locator1 = "TextInput#NAME",
					value1 = "${depotNameEdit}");
			}
			else {
				Type(
					locator1 = "TextInput#NAME",
					value1 = "${depotNameEdit}");
			}
		}

		if (isSet(depotDescriptionEdit)) {
			Type(
				locator1 = "TextArea#DESCRIPTION",
				value1 = "${depotDescriptionEdit}");
		}

		Button.clickSave();

		if ("${depot}" == "Duplicate") {
			AssertTextEquals.assertPartialText(
				locator1 = "Message#ERROR",
				value1 = "Please enter a unique name.");
		}
		else {
			Alert.viewSuccessMessage();
		}
	}

	macro view4LanguagesOrder {
		AssertTextEquals.assertPartialText(
			locator1 = "LanguageConfiguration#DEPOT_LANGUAGE_LOCALIZATION_NAME_1",
			value1 = "${localizationName1}");

		AssertTextEquals.assertPartialText(
			locator1 = "LanguageConfiguration#DEPOT_LANGUAGE_LOCALIZATION_NAME_2",
			value1 = "${localizationName2}");

		AssertTextEquals.assertPartialText(
			locator1 = "LanguageConfiguration#DEPOT_LANGUAGE_LOCALIZATION_NAME_3",
			value1 = "${localizationName3}");

		AssertTextEquals.assertPartialText(
			locator1 = "LanguageConfiguration#DEPOT_LANGUAGE_LOCALIZATION_NAME_4",
			value1 = "${localizationName4}");
	}

	macro viewApplication {
		LexiconEntry.changeDisplayStyle(displayStyle = "cards");

		Click(
			key_card = "${depotName}",
			locator1 = "LexiconCard#CARD_TITLE");

		if (isSet(noApplication)) {
			for (var applicationList : list "${applicationList}") {
				AssertElementNotPresent(
					key_portlet = "${applicationList}",
					locator1 = "ProductMenu#PORTLET");
			}
		}
		else {
			for (var applicationList : list "${applicationList}") {
				if (IsElementPresent(locator1 = "ProductMenu#PRODUCT_MENU_CLOSED")) {
					Click.clickNoSPARefresh(locator1 = "ProductMenu#TOGGLE");
				}

				ProductMenuHelper.expandCategory(category = "Content &amp; Data");

				AssertVisible(
					key_portlet = "${applicationList}",
					locator1 = "ProductMenu#PORTLET");
			}
		}
	}

	macro viewConnectedSite {
		for (var siteName : list "${siteList}") {
			AssertElementPresent(
				key_tableEntry = "${siteName}",
				locator1 = "LexiconTable#TABLE_ENTRY");

			AssertTextEquals(
				key_tableEntry = "${siteName}",
				key_tableEntryText = "Yes",
				locator1 = "LexiconTable#TABLE_ENTRY_TEXT",
				value1 = "Yes");
		}
	}

	macro viewCurrentLanguages {
		for (var currentLanguage : list "${currentLanguages}") {
			AssertTextEquals.assertPartialText(
				key_language = "${currentLanguage}",
				locator1 = "LanguageConfiguration#DEPOT_AVAILABLE_LANGUAGES",
				value1 = "${currentLanguage}");
		}

		Button.click(button = "Edit");

		for (var currentLanguage : list "${currentLanguages}") {
			AssertChecked.assertCheckedNotVisible(
				key_language = "${currentLanguage}",
				locator1 = "Checkbox#DEPOT_LANGUAGE_CHECKBOX");
		}

		Click(locator1 = "Icon#TIMES");
	}

	macro viewDefaultCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "No asset libraries were found.");
	}

	macro viewDefaultLanguage {
		AssertTextEquals.assertPartialText(
			key_language = "${defaultDepotLanguage}",
			locator1 = "LanguageConfiguration#DEPOT_DEFAULT_LANGUAGE",
			value1 = "${defaultDepotLanguage}");

		Button.click(button = "Edit");

		AssertTextEquals.assertPartialText(
			key_language = "${defaultDepotLanguage}",
			locator1 = "LanguageConfiguration#DEPOT_MANAGEMENT_PANEL_DEFAULT_LANGUAGE",
			value1 = "${defaultDepotLanguage}");

		AssertElementPresent(
			key_language = "${defaultDepotLanguage}",
			locator1 = "Checkbox#DEPOT_DEFAULT_LANGUAGE_CHECKBOX_DISABLED");

		Click(locator1 = "Icon#TIMES");
	}

	macro viewDefaultLanguagesConfiguration {
		AssertChecked.assertCheckedNotVisible(
			key_languagesOption = "Use the default language options.",
			locator1 = "Radio#DEPOT_LANGUAGES_OPTION");

		AssertNotChecked.assertNotCheckedNotVisible(
			key_languagesOption = "Define a custom default language and additional active languages for this asset library.",
			locator1 = "Radio#DEPOT_LANGUAGES_OPTION");

		AssertTextEquals.assertPartialText(
			key_language = "English (United States)",
			locator1 = "LanguageConfiguration#DEPOT_DEFAULT_LANGUAGE",
			value1 = "English (United States)");

		for (var language : list "English (United States),Arabic (Saudi Arabia),Catalan (Spain),Chinese (China),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Spanish (Spain),Swedish (Sweden)") {
			AssertTextEquals.assertPartialText(
				key_language = "${language}",
				locator1 = "LanguageConfiguration#DEPOT_AVAILABLE_LANGUAGES",
				value1 = "${language}");
		}

		AssertElementPresent(locator1 = "Button#SAVE");
	}

	macro viewDocumentInFTP {
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/documents/${depotName}");

		if (isSet(dmFolderName)) {
			Click(
				key_dmDocumentName = "${dmFolderName}",
				locator1 = "Link#DOCUMENT_IN_FTP");
		}

		AssertTextEquals(
			key_dmDocumentName = "${dmDocumentTitle}",
			locator1 = "Link#DOCUMENT_IN_FTP",
			value1 = "${dmDocumentTitle}");
	}

	macro viewGeneralLanguageOptions {
		Page.viewFriendlyURLLanguageOptionsPG(
			currentLanguageList = "${currentLanguageList}",
			fieldName = "Name");

		Page.viewFriendlyURLLanguageOptionsPG(
			currentLanguageList = "${currentLanguageList}",
			fieldName = "Description");
	}

	macro viewLanguageOrderInWebContent {
		Click(locator1 = "Button#LOCALIZATION_GENERIC");

		Depot.view4LanguagesOrder(
			localizationName1 = "${localizationName1}",
			localizationName2 = "${localizationName2}",
			localizationName3 = "${localizationName3}",
			localizationName4 = "${localizationName4}");

		Click(
			key_portletName = "JournalPortlet_Menu",
			locator1 = "Button#LANGUAGE_DROPDOWN");

		Depot.view4LanguagesOrder(
			localizationName1 = "${localizationName1}",
			localizationName2 = "${localizationName2}",
			localizationName3 = "${localizationName3}",
			localizationName4 = "${localizationName4}");

		Panel.expandPanel(panel = "Basic Information");

		Click(
			key_fieldName = "Summary",
			locator1 = "Button#LOCALIZATION");

		Depot.view4LanguagesOrder(
			localizationName1 = "${localizationName1}",
			localizationName2 = "${localizationName2}",
			localizationName3 = "${localizationName3}",
			localizationName4 = "${localizationName4}");

		Panel.expandPanel(panel = "Friendly URL");

		Click(
			key_portletName = "JournalPortlet_friendlyURLMenu",
			locator1 = "Button#LANGUAGE_DROPDOWN");

		Depot.view4LanguagesOrder(
			localizationName1 = "${localizationName1}",
			localizationName2 = "${localizationName2}",
			localizationName3 = "${localizationName3}",
			localizationName4 = "${localizationName4}");
	}

	macro viewNoConnectedSiteCP {
		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO_DEPOT",
			value1 = "No sites are connected yet.");
	}

	macro viewNoDocumentInFTP {
		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/documents/${depotName}");

		if (isSet(dmFolderName)) {
			Click(
				key_dmDocumentName = "${dmFolderName}",
				locator1 = "Link#DOCUMENT_IN_FTP");
		}

		AssertElementNotPresent(
			key_dmDocumentName = "${dmDocumentTitle}",
			locator1 = "Link#DOCUMENT_IN_FTP");
	}

	macro viewSearchResult {
		if ("${resultCount}" != "1") {
			AssertTextEquals.assertPartialText(
				locator1 = "ManagementBar#SEARCH_RESULT_SUMMARY",
				value1 = "${resultCount} Results for ${searchTerm}");
		}

		else {
			AssertTextEquals.assertPartialText(
				locator1 = "ManagementBar#SEARCH_RESULT_SUMMARY",
				value1 = "1 Result for ${searchTerm}");
		}

		for (var depotName : list "${includedResults}") {
			var key_card = "${depotName}";

			AssertTextEquals(
				locator1 = "LexiconCard#CARD_TITLE",
				value1 = "${depotName}");
		}

		if (isSet(excludedResults)) {
			for (var depotName : list "${excludedResults}") {
				var key_card = "${depotName}";

				AssertElementNotPresent(locator1 = "LexiconCard#CARD_TITLE");
			}
		}
	}

}