/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.tools.service.builder.test.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.dao.db.DB;
import com.liferay.portal.kernel.dao.db.DBManagerUtil;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.module.framework.service.IdentifiableOSGiService;
import com.liferay.portal.kernel.service.BaseServiceImpl;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.spring.extender.service.ServiceReference;
import com.liferay.portal.tools.service.builder.test.model.ERCGroupEntry;
import com.liferay.portal.tools.service.builder.test.service.ERCGroupEntryService;
import com.liferay.portal.tools.service.builder.test.service.persistence.ERCGroupEntryPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the erc group entry remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.portal.tools.service.builder.test.service.impl.ERCGroupEntryServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.liferay.portal.tools.service.builder.test.service.impl.ERCGroupEntryServiceImpl
 * @generated
 */
public abstract class ERCGroupEntryServiceBaseImpl
	extends BaseServiceImpl
	implements ERCGroupEntryService, IdentifiableOSGiService {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Use <code>ERCGroupEntryService</code> via injection or a <code>org.osgi.util.tracker.ServiceTracker</code> or use <code>com.liferay.portal.tools.service.builder.test.service.ERCGroupEntryServiceUtil</code>.
	 */

	/**
	 * Returns the erc group entry local service.
	 *
	 * @return the erc group entry local service
	 */
	public com.liferay.portal.tools.service.builder.test.service.
		ERCGroupEntryLocalService getERCGroupEntryLocalService() {

		return ercGroupEntryLocalService;
	}

	/**
	 * Sets the erc group entry local service.
	 *
	 * @param ercGroupEntryLocalService the erc group entry local service
	 */
	public void setERCGroupEntryLocalService(
		com.liferay.portal.tools.service.builder.test.service.
			ERCGroupEntryLocalService ercGroupEntryLocalService) {

		this.ercGroupEntryLocalService = ercGroupEntryLocalService;
	}

	/**
	 * Returns the erc group entry remote service.
	 *
	 * @return the erc group entry remote service
	 */
	public ERCGroupEntryService getERCGroupEntryService() {
		return ercGroupEntryService;
	}

	/**
	 * Sets the erc group entry remote service.
	 *
	 * @param ercGroupEntryService the erc group entry remote service
	 */
	public void setERCGroupEntryService(
		ERCGroupEntryService ercGroupEntryService) {

		this.ercGroupEntryService = ercGroupEntryService;
	}

	/**
	 * Returns the erc group entry persistence.
	 *
	 * @return the erc group entry persistence
	 */
	public ERCGroupEntryPersistence getERCGroupEntryPersistence() {
		return ercGroupEntryPersistence;
	}

	/**
	 * Sets the erc group entry persistence.
	 *
	 * @param ercGroupEntryPersistence the erc group entry persistence
	 */
	public void setERCGroupEntryPersistence(
		ERCGroupEntryPersistence ercGroupEntryPersistence) {

		this.ercGroupEntryPersistence = ercGroupEntryPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.kernel.service.CounterLocalService
		getCounterLocalService() {

		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.kernel.service.CounterLocalService
			counterLocalService) {

		this.counterLocalService = counterLocalService;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the OSGi service identifier.
	 *
	 * @return the OSGi service identifier
	 */
	@Override
	public String getOSGiServiceIdentifier() {
		return ERCGroupEntryService.class.getName();
	}

	protected Class<?> getModelClass() {
		return ERCGroupEntry.class;
	}

	protected String getModelClassName() {
		return ERCGroupEntry.class.getName();
	}

	/**
	 * Performs a SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) {
		try {
			DataSource dataSource = ercGroupEntryPersistence.getDataSource();

			DB db = DBManagerUtil.getDB();

			sql = db.buildSQL(sql);
			sql = PortalUtil.transformSQL(sql);

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(
				dataSource, sql);

			sqlUpdate.update();
		}
		catch (Exception exception) {
			throw new SystemException(exception);
		}
	}

	@BeanReference(
		type = com.liferay.portal.tools.service.builder.test.service.ERCGroupEntryLocalService.class
	)
	protected com.liferay.portal.tools.service.builder.test.service.
		ERCGroupEntryLocalService ercGroupEntryLocalService;

	@BeanReference(type = ERCGroupEntryService.class)
	protected ERCGroupEntryService ercGroupEntryService;

	@BeanReference(type = ERCGroupEntryPersistence.class)
	protected ERCGroupEntryPersistence ercGroupEntryPersistence;

	@ServiceReference(
		type = com.liferay.counter.kernel.service.CounterLocalService.class
	)
	protected com.liferay.counter.kernel.service.CounterLocalService
		counterLocalService;

}