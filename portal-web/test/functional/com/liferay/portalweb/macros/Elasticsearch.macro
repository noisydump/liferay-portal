definition {

	macro getClientVersion {
		var projectDir = PropsUtil.get("project.dir");

		var fileContent = FileUtil.read("${projectDir}/modules/apps/portal-search-elasticsearch7/portal-search-elasticsearch7-impl/build.gradle");

		var clientVersion = RegexUtil.replace("${fileContent}", "elasticsearchVersion = &quot;(\d+\.\d+\.\d+)", "1");

		echo("Elasticsearch client version: ${clientVersion}");

		return "${clientVersion}";
	}

	macro getServerVersion {
		if (!(isSet(port))) {
			var liferayHome = PropsUtil.get("liferay.home.dir.name");

			var fileContent = FileUtil.read("${liferayHome}/osgi/configs/com.liferay.portal.search.elasticsearch7.configuration.ElasticsearchConfiguration.config");

			var remoteMode = RegexUtil.replace("${fileContent}", "productionModeEnabled=&quot;(.*)&quot;", "1");

			if ("${remoteMode}" == "true") {
				var port = "9200";
			}
			else {
				var port = "9201";
			}
		}

		var curl = "http://localhost:${port}";

		var serverInfo = JSONCurlUtil.get("${curl}");

		var serverVersion = RegexUtil.replace("${serverInfo}", "number&quot; : &quot;(\d+\.\d+\.\d+)", "1");

		echo("Version of the Elasticsearch server on port ${port}: ${serverVersion}");

		return "${serverVersion}";
	}

	macro viewClusterStatus {
		AssertTextPresent(
			locator1 = "//pre",
			value1 = "${clusterStatus}");
	}

	@description = "Elasticsearch provides a Cluster Health API (http://localhost:${nodePort}/_cluster/health?pretty=true) to easily view the current status of the cluster."
	macro viewClusterStatusViaClusterHealthAPI {
		Navigator.openSpecificURL(url = "http://localhost:${nodePort}/_cluster/health?level=indices&amp;pretty");

		AssertTextEquals.assertPartialText(
			locator1 = "//body",
			value1 = "&quot;cluster_name&quot; : &quot;LiferayElasticsearchCluster&quot;");

		AssertTextEquals.assertPartialText(
			locator1 = "//body",
			value1 = "&quot;number_of_nodes&quot; : ${numberOfNodes}");

		AssertTextEquals.assertPartialText(
			locator1 = "//body",
			value1 = "&quot;number_of_data_nodes&quot; : ${numberOfNodes}");
	}

}