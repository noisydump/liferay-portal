@component-name = "portal-publications"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Publications";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		ApplicationsMenu.gotoPortlet(
			category = "Publications",
			panel = "Applications",
			portlet = "Settings");

		Publications.enablePublications();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ApplicationsMenu.gotoPortlet(
				category = "Publications",
				panel = "Applications",
				portlet = "Settings");

			Publications.disablePublications();
		}
	}

	@priority = "4"
	test CheckoutAndCheckinDocumentInPublication {
		property test.assert.warning.exceptions = "true";

		Publications.createNewPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMDocument.checkoutCP(dmDocumentTitle = "DM Document Title");

		Refresh();

		DMDocument.checkinCP(
			dmDocumentTitle = "Check in as major version",
			revision = "Major");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		AssertElementNotPresent(
			key_dmDocumentTitle = "Check in as major version",
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_ICON_LOCKED");

		DMDocument.checkDocumentCheckboxCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewDocumentVersionNumberCmdPG(dmDocumentVersionNumber = "2.0");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.publishPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMDocument.checkDocumentCheckboxCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewDocumentVersionNumberCmdPG(dmDocumentVersionNumber = "2.0");
	}

	@priority = "4"
	test ConflictingPublicationsNeedManualResolution {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title");

		Publications.createNewPublication(publicationsName = "Publication Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.editCP(
			dmDocumentDescription = "DM Document Description1",
			dmDocumentDescriptionEdit = "DM Document Description Edit",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit");

		DMDocument.viewEditCP(
			dmDocumentTitleEdit = "DM Document Title Edit",
			dmDocumentVersionNumber = "1.1");

		Publications.createNewPublication(publicationsName = "Publication Name 2");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.editCP(
			dmDocumentDescription = "DM Document Description1",
			dmDocumentDescriptionEdit = "DM Document 2 Description Edit",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document 2 Title Edit");

		DMDocument.viewEditCP(
			dmDocumentTitleEdit = "DM Document 2 Title Edit",
			dmDocumentVersionNumber = "1.1");

		Publications.gotoPublish(publicationsName = "Publication Name 2");

		Publications.publishPublication(publicationsName = "Publication Name 2");

		Publications.selectPublication(publicationsName = "Publication Name");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.viewNeedsManualResolution(
			entryTitle = "DM Document Title Edit",
			warningMessage = "The conflict cannot be automatically resolved.");

		Publications.gotoViewDiffInConflictingPublications(entryTitle = "DM Document Title Edit");

		Publications.viewPublicationsDiff(
			columnName = "Title",
			columnValueInProduction = "DM Document 2 Title Edit",
			columnValueInPublication = "DM Document Title Edit",
			diffRemovedValue = "2",
			publicationsName = "Publication Name");

		IFrame.closeFrame();

		Pause(locator1 = "3000");

		Publications.discardPublications(
			conflictingPublications = "true",
			entryTitle = "DM Document Title Edit",
			publicationsCategory = "Asset",
			publicationsTitle = "DM Document Title Edit");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.viewEditCP(
			dmDocumentTitleEdit = "DM Document 2 Title Edit",
			dmDocumentVersionNumber = "1.1");
	}

	@priority = "4"
	test PublishDocumentFolderWithEditedDocument {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.txt",
			dmDocumentTitle = "DM Document Title");

		Publications.createNewPublication(publicationsName = "Publication Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.editCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentDescriptionEdit = "DM Document Description Edit",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMDocument.moveToFolderCP(
			dmDocumentTitle = "DM Document Title Edit",
			dmFolderName = "DM Folder Name");

		DMDocument.viewMovedToFolderCP(
			dmDocumentTitle = "DM Document Title Edit",
			dmFolderName = "DM Folder Name");

		Publications.gotoReviewPublications();

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Document",
			publicationsSite = "Guest",
			publicationsTitle = "DM Document Title Edit",
			publicationsType = "Modified",
			publicationsUser = "Test Test");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Documents Folder",
			publicationsSite = "Guest",
			publicationsTitle = "DM Folder Name",
			publicationsType = "Added",
			publicationsUser = "Test Test");

		PublicationsChanges.viewPublicationsViaContextStyle(
			publicationsCategory = "Document",
			publicationsDescription = "Test Test modified a Document in Guest",
			publicationsTitle = "DM Document Title Edit");

		PublicationsChanges.viewPublicationsViaContextStyle(
			publicationsCategory = "Documents Folder",
			publicationsDescription = "Test Test added a Documents Folder in Guest",
			publicationsTitle = "DM Folder Name");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.publishPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMFolder.viewCP(dmFolderName = "DM Folder Name");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title Edit");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title Edit");
	}

	@priority = "4"
	test PublishDocumentWithNewDocumentType {
		Publications.createNewPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Text",
			dmDocumentTypeName = "DM Document Type Name");

		DMDocumentType.viewCP(dmDocumentTypeName = "DM Document Type Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Document Title",
			dmDocumentTypeName = "DM Document Type Name",
			textField = "DM Document Text");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		Publications.gotoReviewPublications();

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Document",
			publicationsSite = "Guest",
			publicationsTitle = "DM Document Title",
			publicationsType = "Added",
			publicationsUser = "Test Test");

		PublicationsChanges.viewPublicationsViaChangesStyle(
			publicationsCategory = "Dynamic Data Mapping Structure",
			publicationsSite = "Guest",
			publicationsTitle = "DM Document Type Name",
			publicationsType = "Added",
			publicationsUser = "Test Test");

		PublicationsChanges.viewPublicationsViaContextStyle(
			publicationsCategory = "Document",
			publicationsDescription = "Test Test added a Document in Guest",
			publicationsTitle = "DM Document Title");

		Publications.gotoPublish(publicationsName = "Publication Name");

		Publications.publishPublication(publicationsName = "Publication Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentCP(dmDocumentTitle = "DM Document Title");

		DMDocument.viewCP(dmDocumentTitle = "DM Document Title");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.viewCP(dmDocumentTypeName = "DM Document Type Name");
	}

}